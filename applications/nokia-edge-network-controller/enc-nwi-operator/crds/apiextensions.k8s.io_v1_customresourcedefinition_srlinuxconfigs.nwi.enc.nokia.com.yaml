# Copyright (c) 2022 Nokia Corporation
# Licensed under the Apache License 2.0
# SPDX-License-Identifier: Apache-2.0
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: enc-nwi-system/enc-nwi-serving-cert
    controller-gen.kubebuilder.io/version: v0.4.1
  name: srlinuxconfigs.nwi.enc.nokia.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: enc-nwi-webhook-service
          namespace: enc-nwi-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: nwi.enc.nokia.com
  names:
    kind: SRLinuxConfig
    listKind: SRLinuxConfigList
    plural: srlinuxconfigs
    singular: srlinuxconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Switch ID
      jsonPath: .spec.switchID
      name: Switch
      type: string
    - description: YANG Path
      jsonPath: .spec.path
      name: Path
      type: string
    - description: Ready
      jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: SRLinuxConfig is the Schema for the srlinuxconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SRLinuxConfigSpec defines the desired state of SRLinuxConfig
            properties:
              path:
                description: Full path to this resource
                type: string
              properties:
                description: Contains all fields for the specific resource being addressed
                type: object
                x-kubernetes-preserve-unknown-fields: true
              switchID:
                description: ID for the switch this resource is/should be on.
                type: string
            required:
            - path
            - switchID
            type: object
          status:
            description: SRLinuxConfigStatus defines the observed state of SRLinuxConfig
            properties:
              conditions:
                items:
                  description: copied from https://github.com/kubernetes/apimachinery/blob/v0.22.0/pkg/apis/meta/v1/types.go#L1398
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: the generation used to generate this condition
                      format: int64
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - observedGeneration
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
